name: Terraform Deploy

on:
  push:
    paths:
      - '**/*.tf'
      - '**/*.tfvars'
      - '.github/workflows/terraform.yml'
    branches:
      - main
  workflow_dispatch:

permissions:
  id-token: write    # Grant OIDC permissions for Azure Login
  contents: read     # Grant access to repository content

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Azure Login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.ARM_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7

      - name: Initialize Terraform
        working-directory: ./terraform
        run: terraform init

      - name: Check Resource Group Existence
        id: check_rg
        run: |
          if az group exists --name fc-transformer-rg; then
            echo "resource_group_exists=true" >> $GITHUB_ENV
          else
            echo "resource_group_exists=false" >> $GITHUB_ENV
          fi

      - name: Plan Terraform
        working-directory: ./terraform
        run: |
          terraform plan -out=plan.out \
            -var="RUNWAYML_API_KEY=${{ secrets.RUNWAYML_API_KEY }}"\
            -var="YOUTUBE_CLIENT_ID=${{ secrets.YOUTUBE_CLIENT_ID }}"\
            -var="YOUTUBE_CLIENT_SECRET=${{ secrets.YOUTUBE_CLIENT_SECRET }}"\
            -var="YOUTUBE_REFRESH_TOKEN=${{ secrets.YOUTUBE_REFRESH_TOKEN }}"\
            -var="AZURE_CLIENT_ID=${{ secrets.AZURE_CLIENT_ID }}"\
            -var="ARM_TENANT_ID=${{ secrets.ARM_TENANT_ID }}"\
            -var="AZURE_SUBSCRIPTION_ID=${{ secrets.AZURE_SUBSCRIPTION_ID }}"\
            -var="AZURE_CLIENT_SECRET=${{ secrets.AZURE_CLIENT_SECRET }}"

      - name: Save Terraform Plan
        uses: actions/upload-artifact@v3
        with:
          name: terraform-plan
          path: ./terraform/plan.out

      - name: Apply Terraform
        working-directory: ./terraform
        if: github.event_name == 'workflow_dispatch'
        run: terraform apply -auto-approve plan.out
